[project]
name = "aelus-aether"
version = "0.1.0"
description = "Multi-tenant, multi-repository RAG system for product intelligence"
readme = "README.md"
requires-python = ">=3.12"
license = { text = "MIT" }
authors = [
    { name = "Aelus Team", email = "team@aelus.dev" }
]

dependencies = [
    # Web Framework
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.32.0",
    "pydantic>=2.10.0",
    "pydantic-settings>=2.6.0",

    # Database
    "asyncpg>=0.30.0",
    "sqlalchemy[asyncio]>=2.0.36",
    "alembic>=1.14.0",
    "pgvector>=0.3.6",

    # Task Queue
    "celery>=5.5.0",  # Native async task support (async def tasks work with solo/gevent pool)
    "redis>=5.2.0",

    # Authentication
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.20",

    # AI/ML
    "voyageai>=0.3.5",  # AsyncClient support for native async embeddings
    "cohere>=5.13.0",
    "openai>=1.57.0",

    # Utilities
    "python-dotenv>=1.0.1",
    "structlog>=24.4.0",
    "httpx>=0.28.1",
    "aiofiles>=24.1.0",

    # Monitoring
    "prometheus-client>=0.21.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "factory-boy>=3.3.0",
    "faker>=30.8.2",
    "httpx>=0.28.1",
    "ruff>=0.8.4",
    "mypy>=1.13.0",
    "bandit>=1.8.0",
    "pre-commit>=4.0.1",
]
workers = [
    "gevent>=24.2.1",  # Async worker pool for Celery (recommended for production)
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests (fast, no external dependencies)",
    "integration: Integration tests (require DB/Redis)",
    "slow: Slow tests (may take >5 seconds)",
]
# Minimum coverage threshold
addopts = "--cov=app --cov-report=term-missing --cov-report=html --cov-fail-under=80"

[tool.bandit]
exclude_dirs = ["tests", ".venv", "venv"]
skips = ["B101"]  # Skip assert_used check (common in tests)
